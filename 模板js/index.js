// let pathStr =
//   'm74.5,89c1,1 0.7435,1.796997 0,3c-1.662506,2.689995 -1.385094,5.372017 -4,9c-0.826904,1.14727 -2.380554,2.763046 -6,9c-1.122341,1.933998 -4.224205,7.902824 -5,10c-1.430496,3.866997 -1.793934,7.08744 -4,12c-2.748055,6.119492 -4.231731,9.927673 -6,16c-1.152771,3.958679 -0.511269,5.029968 -1,9c-0.503773,4.092209 -1,8 -1,11c0,4 0,7 0,9c0,4 0,7 0,9c0,4 2.224205,6.902832 3,9c1.430496,3.867004 2.385098,6.372009 5,10c2.480717,3.441803 6.198921,5.532364 9,7c4.428894,2.320526 7.823746,4.486252 10,5c3.892998,0.919006 8,0 13,0c4,0 6.888557,-0.194092 12,-3c5.880447,-3.228043 13.513,-9.733566 18,-19c5.665611,-11.70047 6.835007,-21.014893 8,-33c0.876091,-9.012909 1,-19 1,-28c0,-10 0,-15 0,-21c0,-4 -1.617317,-7.076118 -2,-8c-0.541199,-1.306564 -2,-2 -3,-2c-1,0 -2.152245,-0.765366 -4,0c-2.613129,1.08239 -4.729622,6.228851 -9,11c-1.886337,2.107544 -4.496223,7.907784 -5,12c-0.488731,3.970032 -2,9 -2,13c0,4 0,6 0,10c0,5 0,8 0,10c0,4 0.337494,5.310013 2,8c0.7435,1.203003 1.386871,2.917603 4,4c0.923882,0.38269 3.080254,0.689255 6,0c2.176254,-0.513748 4.718987,-3.310211 8,-6c5.576653,-4.571762 13.042938,-9.925766 20,-14c5.031631,-2.946655 13.891708,-8.195755 21,-12c7.885941,-4.220428 16.667084,-6.943726 24,-9c6.808441,-1.909195 14.074814,-0.519623 22,-2c8.106003,-1.51416 13.851593,-2.99511 24,-4c5.970795,-0.591225 11,0 18,0c5,0 9.953308,-0.499031 18,-1c4.990326,-0.310684 12,0 17,0c4,0 8,0 12,0c1,0 2.186005,-0.307449 4,1c1.147278,0.826904 2.493469,2.878555 3,6c0.48056,2.961258 2.376678,7.887314 4,14c2.617523,9.8564 6.499634,19.971207 7,33c0.537262,13.989685 1,26 1,41c0,12 0,26 0,36c0,7 0.977478,16.059937 0,24c-1.007538,8.184418 -4.077637,14.558014 -8,20c-5.78833,8.030884 -10.907776,9.496216 -15,10c-3.970032,0.488739 -10,0 -19,0c-9,0 -18.894653,-1.197296 -30,-7c-7.927338,-4.142151 -19.236221,-11.795441 -27,-21c-8.25679,-9.789063 -13.711609,-22.092255 -18,-35c-4.687119,-14.107834 -7,-28 -7,-40c0,-12 -1.597351,-23.116592 0,-34c1.516068,-10.329651 6,-18 11,-27c5,-9 12.358612,-16.467445 20,-22c6.326187,-4.580322 12.886826,-10.295464 23,-14c8.90799,-3.263069 20.813873,-4.879005 33,-7c9.901031,-1.723274 19,-1 24,-1c6,0 8,0 13,0c3,0 3.852722,0.173096 5,1c1.813995,1.307449 2.679626,2.025826 3,4c0.506531,3.121445 1,5 1,10c0,4 0,7 0,9c0,4 1.579926,7.783798 -1,11c-1.39917,1.744232 -7.951385,7.065948 -12,10c-9.883942,7.162933 -18.967316,13.059311 -28,18c-12.953674,7.085373 -24.722778,14.54303 -40,22c-17.701553,8.64032 -29.891296,15.263245 -49,23c-17.901581,7.248001 -33.896057,15.198013 -49,23c-13.906708,7.183563 -28.085884,15.851547 -42,24c-10.063255,5.893311 -17.617165,10.126862 -25,16c-3.320198,2.641266 -5.714119,6.21167 -8,9c-2.689789,3.281006 -3.877655,5.06601 -5,7c-1.809723,3.118469 -2.707108,5.292908 -2,6c0.707108,0.707092 1.823746,0.486267 4,1c0.973251,0.229767 2.920341,1.167969 7,3c4.91256,2.206055 8.480156,4.092773 16,7c8.599274,3.324524 16.496246,7.13623 29,12c13.569763,5.278412 29.88945,11.245544 43,17c11.903839,5.224792 23.174881,7.58786 33,12c10.199158,4.580109 17.156876,7.579712 23,10c4.131714,1.711426 7.418854,2.418854 9,4c1.581146,1.581146 2,3 3,3l1,1';

// let pathStr =
//   'm148.757469,126.879322l0,0c0,-6.077043 7.182099,-11.003459 16.041665,-11.003459l7.29167,0l0,0l35.000004,0l65.62499,0c4.254525,0 8.334782,1.159287 11.343185,3.222838c3.008384,2.063551 4.698489,4.862325 4.698489,7.780621l0,27.508651l0,0l0,16.505185l0,0c0,6.077046 -7.182094,11.003459 -16.04167,11.003459l-65.62499,0l-45.723187,27.979239l10.723182,-27.979239l-7.29167,0c-8.859566,0 -16.041665,-4.926413 -16.041665,-11.003459l0,0l0,-16.505185l0,0l-0.000005,-27.508651z';

// let pathStr = 'c-8.859566,0 -16.041665,-4.926413 -16.041665,-11.003459l0,0l0,-16.505185l0,0l-0.000005,-27.508651z'

// let pathStr =
//   'm186.174919,197.960927l49.736756,-86.841943l49.736756,86.841943l-99.473512,0z';

// ai 导出的格式
// let pathStr = `
// M98.2,1.1c0.9,0,1.8,0,2.7,0c0.2,0.4,0.4,0.7,0.5,1.1c3.5,4.6,3.8,22.2,5.5,29.5c0,4.5,0,9.1,0,13.6  c1.4,6.4,2.1,17.6,0.5,24.5c-0.4,1.8,0.4,4.5,0.5,5.5c-0.4,3.8-0.7,7.6-1.1,11.5c-1.3,4.9-2.5,9.8-3.8,14.7  c-3.1,7.2-15.2,18.8-21.8,22.9c-9,5.6-21.1,6.1-31.6,10.4c-16.8,6.8-33.3,18.3-40.4,34.9C7,175,7.4,180,6,186.5  c-1.3,5.8-2.1,14.7-0.5,21.3c7.7,33.3,25.6,47.7,57.3,56.7c8,0.7,16,1.5,24,2.2c14.9,3.4,29.9,7,37.6,17.5  c7.8,10.5,7.1,29.5,14.2,40.9c4.1,6.6,12.6,13.9,19.6,17.5c4.3,2.2,10.1,0.8,14.7,2.7c9.8,4.1,23.6,7.7,35.5,6.5  c10.4-1,23.7,2,34.4-0.5c22.7-5.5,34.3-15.6,42-36c2.4-6.3,5.4-18.5,2.7-27.8c-4.6-16.3-19.8-31.6-13.1-55.6  c5.5-19.5,27.5-26.5,34.9-43.1c4.9-11,0.8-30.9-2.7-39.3c-3-7.1-5.5-12.4-9.8-18c-2.4-3.2-7-4.8-10.4-7.1  c-17.3-12.1-48.3-16.3-77.5-16.4c-0.7-1.3-1-1.5-1.1-3.8c0.2-0.2,0.4-0.4,0.5-0.5c12.7-1.6,29.1,0.4,39.8,3.3  c10,2.6,18.5,2.9,27.8,6c16.6,5.4,27.8,17.6,34.4,33.3c4.1,9.7,8.8,29.8,3.8,43.1c-6.7,17.8-30.1,25.1-35.5,44.7  c-5.3,19.2,6.2,33.5,10.9,44.7c1.9,4.5,2.2,9.5,3.3,14.7c2.5,11.4-3.1,22.1-6,28.9c-11.5,26.4-30.7,34.4-68.7,34.4  c-5.8,0-11.6,0-17.5,0c-0.9,0.1-2.2,0.9-3.8,0.5c-25.4-5.9-50.1-9.8-62.2-29.5c-7.4-12-6.3-35.8-17.5-44.2  c-7.2-5.4-16.2-9-26.2-11.5c-9.3-0.9-18.5-1.8-27.8-2.7c-17.6-4.7-37.4-13.1-46.9-25.6c-5.3-7-10.9-15.4-13.6-24.5  c-1.8-6.1-2.2-12.4-2.2-19.6c0-38,16.9-56.3,43.1-67.6c9.4-4.1,19.8-4.7,29.5-8.7c8.6-3.6,20.5-14.7,25.1-22.4  c5.9-9.9,7.1-44.5,3.8-59.5c-0.2-5.8-0.4-11.6-0.5-17.5C99.9,17.1,96.9,8.3,98.2,1.1z`;

let pathStr = `M3.9,234.7c0,0,3.4-0.5,3.8-2.7c0.5-2.2,0.9-6.4,2.2-8.7c1.3-2.3,5.4-6.7,6.5-9.8c1.2-3.1,2.1-5.7,1.1-10.4
c-1-4.7-0.5-7.4,1.1-8.7c1.6-1.3,4.1-1.3,3.8-4.4c-0.2-3.1,0.1-7.3-0.5-8.7c-0.7-1.4-0.4-5.8,1.6-7.6c2-1.8,6.3-3.8,7.6-4.4
c1.3-0.6,2.3-4,2.2-4.9c-0.2-0.9,1.1-4,0.5-6c-0.6-2-3.4-5-6-8.2c-2.6-3.2-4.4-8.8-4.4-13.1c0-4.3,0.6-5.8,2.2-6.5
c1.6-0.7,4-0.7,6-1.6c2-0.9,7.2-6.7,8.7-7.6c1.5-0.9,3.6-1.9,4.9-2.7c1.3-0.9,7.4-3.5,12-3.8c4.6-0.3,11.1-0.5,13.1-3.3
c2-2.8,3.7-4.8,4.4-7.1c0.7-2.3,3.9-5.2,6-6c2.1-0.8,7.1-3.4,8.7-6.5c1.6-3.2,3.2-8.8,4.4-12.5c1.1-3.8,4-7,6.5-8.2
c2.5-1.2,6.3-2.9,7.1-3.8c0.8-0.9,1.5-3.4,3.3-3.8c1.8-0.5,2.9-1.3,3.8-2.7c0.9-1.4,6.9-11.3,15.8-14.7c8.9-3.4,12.2-4.4,20.7-4.4
c8.6,0,11.2,0.8,12.5,1.1c1.3,0.3,4.7,1,4.9-0.5c0.2-1.6,0.8-2.5,2.2-2.7c1.4-0.2,1.7-1.7,2.2-3.3c0.5-1.6,1.7-7.1,14.2-10.4
c12.5-3.3,17.8-3.5,21.3-3.3c3.5,0.2,7.3,2.2,9.3,1.6c2-0.5,6.4-2.8,8.2-4.4c1.7-1.6,4.5-2.5,5.5-1.6c0.9,0.9,2.3,0.9,3.3,0
c0.9-0.9,3.3-1.4,3.8-1.1c0.5,0.4,3.8,0.5,4.4-0.5s3.1-4.7,12-6c8.9-1.3,14.4-1.6,18-0.5c3.6,1,9.8,0.6,10.4-0.5
c0.6-1.2,1.8-4.9,3.8-6c2.1-1.1,4.6-1.1,5.5-1.1c0.9,0,2.4-1.4,3.8-1.6c1.4-0.3,3.8,0.5,3.8,0.5s3.2,0.4,4.9,0
c1.7-0.4,5.1,0.1,10.4,2.7c5.2,2.6,7.9,3.6,9.8,5.5c1.9,1.9,5.5,3.5,7.1,4.4c1.6,0.8,2.7,1.4,4.9,3.8s1.8,4.3,3.8,4.4
c2.1,0.1,4,0.5,4.9,1.1c0.9,0.6,1.9,2,3.3,1.1c1.4-0.9,2.3-1.2,3.8-0.5c1.5,0.6,3.7,0.7,4.4,0.5c0.7-0.1,3.1,1.2,5.5,1.1
c2.4-0.1,6.8,0,8.2-1.1c1.3-1.1,2-3.4,2.2-4.4c0.2-0.9,2.5-2.2,3.8-1.1c1.3,1.1,2.3,3.8,3.8,2.2c1.5-1.6-0.1-5.9,1.1-7.1
s3.8-2,4.9-1.1c1.1,0.9,3,1,3.8,0s3.5-1.8,4.9-0.5c1.4,1.2,1.1,3.8,2.7,4.4c1.6,0.6,3.7-0.9,4.9,0.5c1.2,1.4,1.1,2.6,0.5,4.4
c-0.6,1.8-1.8,3.1-0.5,3.8c1.2,0.7,3.6,1.4,3.8,3.3c0.2,1.9-1.1,1.3-2.2,2.2c-1.1,0.9-1.6,2.6-3.3,2.7c-1.7,0.1-7.4-1.6-8.2,0
c-0.8,1.6-0.9,4.1,0,5.5c0.9,1.3,3.1,1.3,5.5,1.6c2.4,0.3,4.2,1.4,4.4,2.2c0.1,0.8,0.3,2.5,1.1,3.8c0.8,1.3,2,3.3,1.1,4.4
c-0.9,1.1-7.3,1.6-10.9,1.6c-3.6,0.1-9.4,0.1-9.3,3.3c0.1,3.1,2.1,4.1,4.9,4.4c2.8,0.2,4.3-0.6,5.5-1.1c1.1-0.5,2.7,0.5,3.3,1.6
c0.5,1.1,1.9,1.6,2.2,2.2c0.3,0.6,0,2.5-1.6,2.7c-1.6,0.3-4.7-0.6-4.9,1.1s0.5,4.3-2.2,5.5c-2.6,1.2-6-0.1-7.6,0.5
c-1.7,0.7-2.5,2.5-1.6,3.3c0.9,0.8,2.2,2.4,1.6,3.3c-0.6,0.9-2.8,2.4-2.7,4.4c0.1,2,1.1,3.6,6,5.5c4.9,1.8,11.2,3,13.1,5.5
s1.9,5.2,3.3,6c1.3,0.8,1.9,1.4,1.6,3.3c-0.3,1.8-2.2,4.9-1.1,7.1c1.1,2.2,4.2,4,5.5,5.5c1.3,1.5,2.3,3.8,2.2,6
c-0.2,2.2-1.6,3.8-3.3,4.4c-1.7,0.6-3.9,0.1-5.5-3.3c-1.6-3.4-5.3-4.9-7.1-4.4c-1.8,0.5-2.9,3.4-3.3,4.9c-0.4,1.5-1.3,2.2-3.8,2.2
c-2.6,0-4.8,0.2-4.9,1.6c-0.1,1.4,1.5,1.5,2.7,1.6c1.2,0.1,2.1,0.1,2.2,1.1c0.1,1-0.5,2.4,1.1,2.7c1.6,0.3,3.4,0,4.4,1.6
c1,1.7,1,3.5-2.2,5.5c-3.2,1.9-6.6,2.9-8.7,6.5c-2.2,3.6-4.6,5.8-4.9,8.7c-0.3,2.9,0.4,6.2-1.6,7.1c-2,0.9-5.3,3.7-7.6,7.6
c-2.3,3.9-5.6,8.2-9.8,10.9c-4.2,2.7-6.3,4.6-8.7,3.8c-2.5-0.8-7-1.1-8.2,0c-1.2,1.1-0.5,3.6-0.5,4.4c0,0.7-4.7,4.1-9.3,6
c-4.5,1.9-8.2,5-7.1,7.1c1.1,2.1-21.5-0.6-49.1-12.5c-27.5-12-37.3-14.4-49.1-13.6c-11.8,0.8-25,11.5-30,13.6
c-5,2.2-13.7,7.8-25.1,7.1c-11.4-0.7-15.8,0.1-22.4,3.3c-6.6,3.2-10.9,7.5-21.3,6c-10.3-1.5-16.9-1.6-20.7,6.5
c-3.8,8.2-9.3,28-19.6,37.1c-10.3,9.1-16.2,13.9-31.6,13.6C41.9,263.3,28.1,262,17,251C5.9,240.1,2.2,235.2,2.2,235.2L3.9,234.7z`;

// todo 加参数 pathStr
function getPathPoints() {
  let reg = new RegExp(/(m|c|s|l|z)([^mcslz]*)/gi);
  // replace 一遍有遗漏，重复一遍
  pathStr = pathStr
    .replace(/(\d)(-\d)/g, '$1,$2')
    .replace(/(\d)(-\d)/g, '$1,$2')
    // .replace(/(\d)\s*(-?\d)/g, '$1,$2')
    .replace(/\s|\n|\r/g, '');
  let matchArr = Array.from(pathStr.matchAll(reg));
  let pathArr = [];
  // matchArr = [{type: 'M', points:[0,0]},...matchArr.slice(28)]
  matchArr.forEach((item, idx) => {
    if (item.length > 0) {
      // pathMap[`${item[1]}-${idx}`] = item[2].split(',')
      const temp = item[2].split(/,/g);
      const res = [];
      if (item[1] !== 'z') {
        temp.forEach((p, i) => {
          if (i % 2 === 0) {
            res.push([+p, +temp[i + 1]]);
          }
        });
      }

      if (idx > 39 && idx < 42) {
        console.log(item[2], res, idx);
      }

      pathArr.push({
        type: item[1],
        // points: item[2].split(' ').map((e) => e.split(',').map((e) => +e)),
        points: res,
      });
    }
  });

  pathArr = absPath(pathArr);
  console.log(pathArr);
  return pathArr;
}

function absPath(pathArr) {
  pathArr.forEach((path, idx, arr) => {
    if (path.type === 'C' || path.type === 'S' || path.type === 'L') {
      return path;
    }
    // 上一次路径的终点
    let lastP;
    if (idx) {
      let tempP = [...arr[idx - 1].points];
      lastP = tempP.splice(tempP.length - 1);
    } else {
      lastP = [[0, 0]];
    }

    // 相对位置转为绝对位置
    path.points = path.points.map((o) => {
      for (let index = 0; index < o.length; index++) {
        if (index % 2) {
          o[index] += lastP[0][1];
        } else {
          o[index] += lastP[0][0];
        }
      }
      return o;
    });
  });

  return pathArr;
}
